/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package adventofcode;

import java.lang.reflect.InvocationTargetException;
import java.util.List;

/*
Keeping this here in case I need to run a CLI at some point soon.
I haven't done java in a while so I'd rather have this around.
If I end up not using it, I'll delete üôÇüëç
*/
public class SolvePuzzles {

  private final List<Class<? extends Day>> daysToSolve =
      List.of(
          Day1.class
      );

  public static void main(String[] args) {
    new SolvePuzzles().main();
  }

  private void main() {
    daysToSolve.forEach(dayClass -> {
      Day day = tryToInstantiate(dayClass);

      System.out.println("--------------------------------------");
      System.out.println("Solving " + dayClass.getName());

      String part1Result = day.solvePart1();
      System.out.println("Part 1: " + part1Result);

      String part2Result = day.solvePart2();
      System.out.println("Part 2: " + part2Result);

      System.out.println("--------------------------------------");
      System.out.println();
    });
  }

  private Day tryToInstantiate(Class<? extends Day> dayClass) {
    try {
      return dayClass.getDeclaredConstructor().newInstance();
    } catch (InstantiationException | IllegalAccessException | InvocationTargetException | NoSuchMethodException e) {
      e.printStackTrace();
      throw new IllegalStateException("Could not instantiate: " + dayClass);
    }
  }
}
